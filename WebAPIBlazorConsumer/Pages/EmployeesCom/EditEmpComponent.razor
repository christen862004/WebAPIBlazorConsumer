@page "/Emp/Edit/{id:int}"
<h3>EditEmpComponent</h3>
@if (EmpObj != null)
{
    <EditForm Model="EmpObj" OnValidSubmit="Save">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div>
            <label>Name</label>
            <InputText @bind-Value="EmpObj.Name" class="form form-control"></InputText>
        </div>
        <div>
            <label>Email</label>
            <InputText @bind-Value="EmpObj.Email" class="form form-control"></InputText>
        </div>

        <div>
            <label>ImageURL</label>
            <InputText @bind-Value="EmpObj.ImageURL" class="form form-control"></InputText>
        </div>

        <div>
            <label>Deptartment</label>
            <InputSelect @bind-Value="EmpObj.DepartmentID" class="form form-control">
                @foreach (var item in DeptList)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </InputSelect>
        </div>
        <input type="submit" value="Save" class="btn btn-primary"/>
    </EditForm>
}



@code {
    [Parameter]
    public int id { get; set; }

    public Employee EmpObj { get; set; }

    public List<Department> DeptList { get; set; }
    [Inject]
    public IServices<Employee> EmpService { get; set; }

    [Inject]
    public IServices<Department> DeptService { get; set; }

    [Inject]
    public NavigationManager NavManager { get; set; }
    protected override async Task OnInitializedAsync()
    {
        EmpObj =await EmpService.GetById(id);
        DeptList = await DeptService.GetAll();
        base.OnInitializedAsync();
    }

    public async void Save()
    {
        //EmpObj.Id = id;
        await EmpService.Update(id, EmpObj);
        NavManager.NavigateTo("/Emp");
    }
}
